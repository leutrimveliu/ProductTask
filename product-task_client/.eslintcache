[{"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\index.js":"1","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\App.js":"2","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\store.js":"3","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reportWebVitals.js":"4","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\User\\Register\\Register.jsx":"5","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\User\\Login\\Login.jsx":"6","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Home\\Home.jsx":"7","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Footer\\Footer.jsx":"8","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Header\\Header.jsx":"9","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Products\\EditProduct\\EditProduct.jsx":"10","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Products\\CreateProduct\\CreateProduct.jsx":"11","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reducers\\index.js":"12","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\api\\register.js":"13","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\api\\products.js":"14","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\actions\\auth.js":"15","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Products\\GetProducts\\GetProducts.jsx":"16","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reducers\\auth.js":"17","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reducers\\message.js":"18","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\actions\\types.js":"19","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\api\\login.js":"20"},{"size":707,"mtime":1631115961892,"results":"21","hashOfConfig":"22"},{"size":1068,"mtime":1631115961860,"results":"23","hashOfConfig":"22"},{"size":315,"mtime":1631115961897,"results":"24","hashOfConfig":"22"},{"size":375,"mtime":1631115961896,"results":"25","hashOfConfig":"22"},{"size":8783,"mtime":1631115961890,"results":"26","hashOfConfig":"22"},{"size":5880,"mtime":1631115961889,"results":"27","hashOfConfig":"22"},{"size":253,"mtime":1631115961882,"results":"28","hashOfConfig":"22"},{"size":1476,"mtime":1631115961875,"results":"29","hashOfConfig":"22"},{"size":6770,"mtime":1631115961878,"results":"30","hashOfConfig":"22"},{"size":6479,"mtime":1631115961885,"results":"31","hashOfConfig":"22"},{"size":5932,"mtime":1631115961884,"results":"32","hashOfConfig":"22"},{"size":166,"mtime":1631115961894,"results":"33","hashOfConfig":"22"},{"size":326,"mtime":1631115961871,"results":"34","hashOfConfig":"22"},{"size":1442,"mtime":1631115961870,"results":"35","hashOfConfig":"22"},{"size":1104,"mtime":1631115961864,"results":"36","hashOfConfig":"22"},{"size":13426,"mtime":1631115961887,"results":"37","hashOfConfig":"22"},{"size":756,"mtime":1631115961893,"results":"38","hashOfConfig":"22"},{"size":372,"mtime":1631115961895,"results":"39","hashOfConfig":"22"},{"size":213,"mtime":1631115961867,"results":"40","hashOfConfig":"22"},{"size":603,"mtime":1631115961868,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6c42ih",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\index.js",[],["92","93"],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\App.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\store.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reportWebVitals.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\User\\Register\\Register.jsx",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\User\\Login\\Login.jsx",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { login } from \"../../../actions/auth\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"StarLabs Task \"}\r\n      {new Date().getFullYear()}{\" \"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  darkTheme: {\r\n    backgroundColor: \"#424242\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#f48fb1\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { message } = useSelector((state) => state.message);\r\n  const { user: currentUser, isLoggedIn } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [darkState, setDarkState] = useState(false);\r\n  const palletType = darkState ? \"light\" : \"dark\";\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const handleThemeChange = () => {\r\n    setDarkState(!darkState);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    dispatch(login(email, password))\r\n      .then(() => {})\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  useEffect(() => {}, [currentUser]);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <br />\r\n\r\n            {message && <Alert severity=\"error\">{message}</Alert>}\r\n            <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={loading}\r\n              >\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Switch checked={darkState} onChange={handleThemeChange} />\r\n                </Grid>\r\n                <Grid item>\r\n                  {darkState ? (\r\n                    <Link\r\n                      to=\"/register\"\r\n                      style={{ color: \"#222\" }}\r\n                      variant=\"body2\"\r\n                    >\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  ) : (\r\n                    <Link\r\n                      to=\"/register\"\r\n                      style={{ color: \"#fff\" }}\r\n                      variant=\"body2\"\r\n                    >\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                <Copyright />\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Home\\Home.jsx",["95"],"import React from \"react\";\r\nimport { getProducts } from \"../../api/products\";\r\nimport GetProduct from \"../Products/GetProducts/GetProducts\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <GetProduct />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Header\\Header.jsx",["96","97","98"],"import React, { useState, useEffect } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  IconButton,\r\n  Drawer,\r\n  useScrollTrigger,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { fade } from \"@material-ui/core/styles\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiPaper-root\": {\r\n      backgroundColor: \"#333\",\r\n    },\r\n  },\r\n  header: {\r\n    marginBottom: \"30px\",\r\n    backgroundColor: \"#444\",\r\n    padding: \"5px 25px\",\r\n  },\r\n  logo: {\r\n    fontFamily: \"Work Sans, sans-serif\",\r\n    fontWeight: 600,\r\n    color: \"#FFFEFE\",\r\n    textAlign: \"left\",\r\n  },\r\n  menuButton: {\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontWeight: 700,\r\n    size: \"18px\",\r\n    marginLeft: \"38px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  drawerContainer: {\r\n    fontWeight: \"bold\",\r\n    padding: \"20px 30px\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"white\",\r\n  },\r\n  IconSearch: {\r\n    color: \"white\",\r\n    maxHeight: \"36px\",\r\n    maxWidth: \"36px\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n    minWidth: \"220px\",\r\n    paddingLeft: \"12px\",\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst Header = ({ user, setUser, props }) => {\r\n  const { root, header, logo, toolbar, drawerContainer } = useStyles();\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 1200\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, [currentUser]);\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar className={toolbar}>\r\n        <NavLink to=\"/\" className=\"header__logo\">\r\n          <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n            StarLabs Task\r\n          </Typography>\r\n        </NavLink>\r\n\r\n        {/* Navigation */}\r\n        <Nav className=\"header__links\">\r\n          <NavLink to=\"/\" className=\"header__option\">\r\n            Products\r\n          </NavLink>\r\n\r\n          {currentUser ? (\r\n            <>\r\n              <NavLink to=\"/createproduct\" className=\"header__option\">\r\n                Create Product\r\n              </NavLink>\r\n              <NavLink to=\"/login\" className=\"header__option\" onClick={logOut}>\r\n                Log Out\r\n              </NavLink>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <NavLink to={\"/login\"} className=\"logged__out\">\r\n                Log In\r\n              </NavLink>\r\n\r\n              <NavLink to={\"/register\"} className=\"logged__out--signup\">\r\n                Sign Up\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    const handleDrawerClose = () =>\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n    return (\r\n      <Toolbar className=\"mobile__responsive\">\r\n        <NavLink to=\"/\" className=\"header__logo\"></NavLink>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n          className={root}\r\n        >\r\n          <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n        </Drawer>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getDrawerChoices = () => {\r\n    return (\r\n      <Nav className=\"nav__mobile\">\r\n        <NavLink to=\"/\" className=\"header__option\">\r\n          Products\r\n        </NavLink>\r\n\r\n        {currentUser ? (\r\n          <>\r\n            <NavLink to=\"/createproduct\" className=\"header__option\">\r\n              Create Product\r\n            </NavLink>\r\n            <NavLink to=\"/login\" className=\"header__option\" onClick={logOut}>\r\n              LogOut\r\n            </NavLink>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <NavLink to={\"/login\"} className=\"header__option\">\r\n              LogIn\r\n            </NavLink>\r\n            <NavLink to=\"/register\" className=\"header__option\">\r\n              SignUp\r\n            </NavLink>\r\n          </>\r\n        )}\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"main__header\">\r\n        <React.Fragment>\r\n          <HideOnScroll {...props}>\r\n            <AppBar className={header}>\r\n              {mobileView ? displayMobile() : displayDesktop()}\r\n            </AppBar>\r\n          </HideOnScroll>\r\n        </React.Fragment>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Products\\EditProduct\\EditProduct.jsx",["99","100","101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport { editProduct, getProduct } from \"../../../api/products\";\r\nimport { useHistory, Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction EditProduct() {\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const classes = useStyles();\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [showEditForm, setShowEditForm] = useState(false);\r\n  const [errMessage, setErrMessage] = useState(false);\r\n  const [productDetails, setProductDetails] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(false);\r\n  const getProductFields = async () => {\r\n    const response = await getProduct(id);\r\n    setProductDetails((oldDetails) => ({\r\n      ...oldDetails,\r\n      title: response.title,\r\n      price: response.price,\r\n      stock: response.stock,\r\n    }));\r\n    setShowEditForm(true);\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProductDetails({ ...productDetails, [name]: value });\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = async (data, e) => {\r\n    const registerData = {\r\n      title: data.title,\r\n      price: data.price,\r\n      stock: data.stock,\r\n      user_id: currentUser.user._id,\r\n    };\r\n    try {\r\n      await editProduct(registerData, id);\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1000);\r\n    } catch (e) {}\r\n  };\r\n  useEffect(() => {\r\n    getProductFields();\r\n  }, [currentUser]);\r\n  if (!currentUser) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={8}\r\n        md={5}\r\n        component={Paper}\r\n        elevation={6}\r\n        square\r\n        style={{ width: \"100%\", marginBottom: 50, marginTop: 60 }}\r\n      >\r\n        <div className={classes.paper}>\r\n          <Typography\r\n            style={{ marginBottom: 20, marginTop: 20 }}\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n          >\r\n            Edit Product\r\n          </Typography>\r\n          <br />\r\n          {errMessage && <Alert severity=\"error\">{errMessage}</Alert>}\r\n          {successMessage && <Alert severity=\"success\">{successMessage}</Alert>}\r\n          <br />\r\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              name=\"title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Product Title\"\r\n              type=\"text\"\r\n              id=\"title\"\r\n              InputLabelProps={{ shrink: true }}\r\n              value={productDetails.title}\r\n              onChange={handleChange}\r\n              inputRef={register({ required: true, minLength: 3 })}\r\n            />\r\n            <p style={{ color: \"red\" }}>\r\n              &#8203;\r\n              {errors.title && errors.title.type === \"required\" && (\r\n                <span>This field is required!</span>\r\n              )}\r\n              {errors.title && errors.title.type === \"minLength\" && (\r\n                <span>This field requires minimum length of 3 characters!</span>\r\n              )}\r\n            </p>\r\n\r\n            <TextField\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Product Price\"\r\n              name=\"price\"\r\n              type=\"decimal\"\r\n              id=\"price\"\r\n              value={productDetails.price}\r\n              onChange={handleChange}\r\n              inputRef={register({ required: true, min: 0.5, max: 1000000 })}\r\n            />\r\n            <p style={{ color: \"red\" }}>\r\n              &#8203;\r\n              {errors.price && errors.price.type === \"required\" && (\r\n                <span>This field is required!</span>\r\n              )}\r\n              {errors.price && errors.price.type === \"min\" && (\r\n                <span>Price must be at least 0.50 cent!</span>\r\n              )}\r\n              {errors.price && errors.price.type === \"max\" && (\r\n                <span>Price must be maximum 1000000!</span>\r\n              )}\r\n            </p>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"stock\"\r\n              label=\"Product stock\"\r\n              type=\"number\"\r\n              InputLabelProps={{ shrink: true }}\r\n              id=\"stock\"\r\n              onChange={handleChange}\r\n              value={productDetails.stock}\r\n              inputRef={register({\r\n                min: 1,\r\n                max: 10000,\r\n                required: true,\r\n              })}\r\n            />\r\n            <p style={{ color: \"red\" }}>\r\n              &#8203;\r\n              {errors.stock && errors.stock.type === \"required\" && (\r\n                <span>This field is required!</span>\r\n              )}\r\n              {errors.stock && errors.stock.type === \"min\" && (\r\n                <span>This field requires minimum 1 item in stock!</span>\r\n              )}\r\n              {errors.stock && errors.stock.type === \"max\" && (\r\n                <span>This field requires maximum 10000 item in stock!</span>\r\n              )}\r\n            </p>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginBottom: \"15px\" }}\r\n              type=\"submit\"\r\n            >\r\n              Edit product\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EditProduct;\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Products\\CreateProduct\\CreateProduct.jsx",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reducers\\index.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\api\\register.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\api\\products.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\actions\\auth.js",[],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\components\\Products\\GetProducts\\GetProducts.jsx",["104"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { getProducts, deleteProducts } from \"../../../api/products\";\r\nimport { useHistory, Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"title\",\r\n    // numeric: \"left\",\r\n    disablePadding: false,\r\n    label: \"Product Title\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    numeric: \"center\",\r\n    disablePadding: false,\r\n    label: \"Product Price\",\r\n  },\r\n  {\r\n    id: \"stock\",\r\n    numeric: \"center\",\r\n    disablePadding: false,\r\n    label: \"Product stock\",\r\n  },\r\n  {\r\n    id: \"publishDate\",\r\n    numeric: \"center\",\r\n    disablePadding: false,\r\n    label: \"Publish date\",\r\n  },\r\n\r\n  {\r\n    id: \"edit\",\r\n    numeric: \"center\",\r\n    disablePadding: false,\r\n    label: \"Edit Product\",\r\n  },\r\n  {\r\n    id: \"delete\",\r\n    numeric: \"center\",\r\n    disablePadding: false,\r\n    label: \"Delete Product\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Our Products\r\n        </Typography>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n    marginTop: 70,\r\n    marginBottom: 50,\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n  },\r\n  paper: { margin: \"auto\", width: \"100%\" },\r\n  table: {\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function CompanyEventsTable() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [product, setProducts] = React.useState([]);\r\n\r\n  const getProductsList = async () => {\r\n    const response = await getProducts();\r\n    setProducts(response);\r\n  };\r\n  const handleDeleteSubmit = async (id) => {\r\n    const deleteuser = {\r\n      user_id: currentUser.user._id,\r\n    };\r\n    try {\r\n      await deleteProducts(id, deleteuser);\r\n\r\n      setTimeout(() => {\r\n        history.go(\"/\");\r\n      }, 1000);\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductsList();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, product.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        md={12}\r\n        component={Paper}\r\n        className={classes.paper}\r\n      >\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={product.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(product, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((product, index) => {\r\n                  const isItemSelected = isSelected(product.title);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(e) => handleClick(e, product.title)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={product._id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                        align=\"left\"\r\n                      >\r\n                        {product.title}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {product.price.toFixed(2)}€{\" \"}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">{product.stock}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {product.publishDate.split(\"T\")[0]}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"center\">\r\n                        <Link to={`/product/${product._id}`}>\r\n                          <IconButton\r\n                            aria-label=\"center\"\r\n                            className=\"edit_button\"\r\n                          >\r\n                            <EditIcon className=\"edit_icon\" />\r\n                          </IconButton>\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {currentUser ? (\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              if (window.confirm(\"Delete the event?\")) {\r\n                                handleDeleteSubmit(product._id);\r\n                              }\r\n                            }}\r\n                            className=\"delete_button\"\r\n                            aria-label=\"delete\"\r\n                          >\r\n                            <DeleteIcon className=\"delete_icon\" />\r\n                          </IconButton>\r\n                        ) : (\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              <Redirect to=\"/\" />;\r\n                            }}\r\n                            className=\"delete_button\"\r\n                            aria-label=\"delete\"\r\n                          >\r\n                            <DeleteIcon className=\"delete_icon\" />\r\n                          </IconButton>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ emptyRows }}>\r\n                  {/* <TableCell colSpan={6} /> */}\r\n                  <Divider />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10]}\r\n          component=\"div\"\r\n          count={product.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reducers\\auth.js",["105"],"import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\reducers\\message.js",["106"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\actions\\types.js",[],["107","108"],"C:\\Users\\leutr\\OneDrive\\Documents\\GitHub\\ProductTask\\product-task_client\\src\\api\\login.js",["109"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:4000/auth\";\r\n\r\nconst login = async (email, password) => {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + localStorage.getItem(\"user\");\r\n  return axios\r\n    .post(API_URL + \"/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n};\r\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":70,"column":30,"nodeType":"116","messageId":"117","endLine":70,"endColumn":40},{"ruleId":"114","severity":1,"message":"118","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":21},{"ruleId":"114","severity":1,"message":"119","line":120,"column":9,"nodeType":"116","messageId":"117","endLine":120,"endColumn":16},{"ruleId":"114","severity":1,"message":"120","line":122,"column":20,"nodeType":"116","messageId":"117","endLine":122,"endColumn":31},{"ruleId":"114","severity":1,"message":"121","line":123,"column":9,"nodeType":"116","messageId":"117","endLine":123,"endColumn":13},{"ruleId":"114","severity":1,"message":"122","line":3,"column":22,"nodeType":"116","messageId":"117","endLine":3,"endColumn":26},{"ruleId":"114","severity":1,"message":"123","line":44,"column":10,"nodeType":"116","messageId":"117","endLine":44,"endColumn":22},{"ruleId":"114","severity":1,"message":"124","line":45,"column":22,"nodeType":"116","messageId":"117","endLine":45,"endColumn":35},{"ruleId":"114","severity":1,"message":"125","line":47,"column":26,"nodeType":"116","messageId":"117","endLine":47,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":80,"column":6,"nodeType":"128","endLine":80,"endColumn":19,"suggestions":"129"},{"ruleId":"114","severity":1,"message":"130","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":13,"column":1,"nodeType":"133","endLine":38,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":5,"column":1,"nodeType":"133","endLine":18,"endColumn":2},{"ruleId":"110","replacedBy":"134"},{"ruleId":"112","replacedBy":"135"},{"ruleId":"131","severity":1,"message":"136","line":25,"column":1,"nodeType":"133","endLine":28,"endColumn":3},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'getProducts' is defined but never used.","'classes' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'open' is assigned a value but never used.","'Link' is defined but never used.","'showEditForm' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProductFields'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'useState' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["137"],["138"],"Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [currentUser, getProductFields]",{"range":"142","text":"143"},[2432,2445],"[currentUser, getProductFields]"]